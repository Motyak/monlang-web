
let preinc (OUT var'):{
    var' += 1
    var'
}

let ++ preinc

let postinc (OUT var'):{
    defer {var' += 1}
    var'
}

{
    var somevar 10
    print(++(&somevar)) -- 11
    print(somevar) -- 11
}

{
    var somevar 10
    print(postinc(&somevar)) -- 10
    print(somevar) -- 11
}

```
    NOTE: postinc impl works because of the fact block expressions cannot return a reference..
          .., therefore it evaluates the VALUE (not lvalue) of var' (that was passed by reference)..
          ..as the return value. The defer comes after.
```
