type Uint {
    is Int
    invariants {
        [ this >= 0 ]
    }
}

struct Account {
    fields {
        Uint balance
    }
}

let withdraw (OUT acc, amount):{
    [ acc is Account ] || err()
    acc.balance -= amount
}

let deposit (OUT acc, amount):{
    [ acc is Account ] || err()
    acc.balance += amount
}

namespace main -- end of global

var account {
    let initial-value 100.00
    Account(initial-value)
}

&account |> withdraw(50.00)
print(acc) -- 50.00

&acc |> deposit(60.00)
print(acc) -- 110.00

&acc |> withdraw(200.00) -- ERR
