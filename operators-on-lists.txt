

var list [1, 2, 3]
list += [4] /* list == [1, 2, 3, 4]
is strictly equivalent to:
list = list + [4]
*/
list = [0] + list // list == [0, 1, 2, 3, 4]

====================================

var list _
list[2] = 3 // list == [<uninitialized>, <uninitialized>, 3]
list[0] // RuntimeException: use of uninitialized value
list[0]? ?? 4 /* `operator[]?` will generate an Optional, ..
..and `operator??` will set a default value if the Optional is empty
*/
list = list[2..=] // list == [3]
list += [4] // list == [3, 4]
list = [0, [1, 2]] + list // list == [0, [1, 2], 3, 4]
list -= [0, 2, 4] // list == [[1, 2], 3]

if [ 3 in list ] {
    println("list contains element `3`")
}
else /* if [ 3 !in list ] */ {
    println("list doesn't contain element `3`)
}
/*
list contains element `3`
*/

==================================================

(prefer putting selectors as lhs rather than rhs)
prefer:
```
len() <| a-very-long-variable-name[a-very-long-key]

len(short-var-name)
```

over:
```
a-very-long-variable-name[a-very-long-key] |> len()
len(a-very-long-variable-name[a-very-long-key])

short-var-name |> len()
len() <| short-var-name
```




